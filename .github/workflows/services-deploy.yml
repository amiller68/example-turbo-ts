name: ðŸš€ Services Build, Push, & Deploy

on:
  push:
    branches: [main, dev]
    paths:
      - "apps/**"
      - "packages/**"
      - ".github/workflows/services-deploy.yml"
      - "iac/**"
  workflow_dispatch:
    inputs:
      services:
        description: "Comma-separated list of services to build"
        required: false
        default: ""
        type: string
      skip-build:
        description: "Skip the build step"
        required: false
        default: false
        type: boolean

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect service changes
        id: detect
        uses: ./.github/actions/detect-service-changes
        with:
          pr_mode: "false"
          services_input: ${{ github.event.inputs.services }}

  build-and-push:
    needs: detect-changes
    if: |
      fromJSON(needs.detect-changes.outputs.matrix).service[0] != null &&
      github.event.inputs.skip-build != 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Build and Push to ECR
        run: |
          chmod +x bin/docker.sh
          ./bin/docker.sh build ${{ matrix.service }} -p linux/amd64
          ./bin/docker.sh push ${{ matrix.service }}

  deploy-to-ecs:
    needs: [detect-changes, build-and-push]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Deploy to ECS
        run: |
          chmod +x bin/ecs
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            STAGE="production"
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            STAGE="staging"
          else
            echo "Error: Deployment triggered from unsupported branch: ${{ github.ref }}"
            exit 1
          fi

          ./bin/ecs deploy $STAGE ${{ matrix.service }}
