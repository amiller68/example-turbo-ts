name: 🏗️ Terraform Plan

on:
  pull_request:
    paths:
      - "iac/**"
      - ".github/workflows/terraform-*.yml"

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-terraform:
    runs-on: ubuntu-latest
    outputs:
      has_tf_changes: ${{ steps.check.outputs.has_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for Terraform changes
        id: check
        run: |
          # Check for any Terraform changes
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^iac/"; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  terraform-plan:
    needs: check-terraform
    if: needs.check-terraform.outputs.has_changes == 'true'
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/envs

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Determine Environment
        id: env
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "env_path=production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.base_ref }}" == "dev" ]]; then
            echo "env_path=staging" >> $GITHUB_OUTPUT
          else
            echo "Unsupported target branch: ${{ github.base_ref }}"
            exit 1
          fi

      - name: Terraform Init ECR
        id: init-ecr
        if: steps.check.outputs.has_changes == 'true'
        run: |
          cd ./iac/envs/ecr
          terraform init

      - name: Terraform Plan ECR
        id: plan-ecr
        if: steps.check.outputs.has_ecr_changes == 'true'
        run: |
          cd ./iac/envs/ecr
          terraform plan -no-color
        continue-on-error: true

      - name: Terraform Init Environment
        id: init-env
        if: steps.check.outputs.has_changes == 'true'
        run: |
          cd ./iac/envs/production
          terraform init

      - name: Terraform Plan Environment
        id: plan-env
        if: steps.check.outputs.has_changes == 'true'
        run: |
          cd ./iac/envs/production
          terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          PLAN_ECR: "${{ steps.plan-ecr.outputs.stdout }}"
          PLAN_ENV: "${{ steps.plan-env.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`\n`;
            
            if ('${{ steps.check.outputs.has_ecr_changes }}' === 'true') {
              output += `
              ### ECR Changes
              #### Terraform Plan 📖\`${{ steps.plan-ecr.outcome }}\`
              <details><summary>Show ECR Plan</summary>
              
              \`\`\`\n
              ${process.env.PLAN_ECR}
              \`\`\`
              
              </details>\n`;
            }

            if ('${{ steps.check.outputs.has_env_changes }}' === 'true') {
              output += `
              ### Environment Changes (${{ steps.env.outputs.env_path }})
              #### Terraform Plan 📖\`${{ steps.plan-env.outcome }}\`
              <details><summary>Show Environment Plan</summary>
              
              \`\`\`\n
              ${process.env.PLAN_ENV}
              \`\`\`
              
              </details>\n`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan-ecr.outcome == 'failure' || steps.plan-env.outcome == 'failure'
        run: exit 1
